{"ast":null,"code":"import _slicedToArray from \"/Users/ellekennedyvalentine/Dev/mod5 /week_1/react-project-DBO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ellekennedyvalentine/Dev/mod5 /week_1/react-project-DBO/client/src/components/GraphSelector.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nvar options = ['2019', '2018'];\nexport default function SplitButton() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  function handleClick() {\n    alert(\"You clicked \".concat(options[selectedIndex]));\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  }\n\n  function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  }\n\n  function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, options[selectedIndex]), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-owns\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    transition: true,\n    disablePortal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      id: \"menu-list-grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, options.map(function (option, index) {\n      return React.createElement(MenuItem, {\n        key: option,\n        disabled: index === 2,\n        selected: index === selectedIndex,\n        onClick: function onClick(event) {\n          return handleMenuItemClick(event, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, option);\n    })))));\n  })));\n}","map":{"version":3,"sources":["/Users/ellekennedyvalentine/Dev/mod5 /week_1/react-project-DBO/client/src/components/GraphSelector.js"],"names":["React","Grid","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","options","SplitButton","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","alert","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst options = ['2019', '2018'];\n\nexport default function SplitButton() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  function handleClick() {\n    alert(`You clicked ${options[selectedIndex]}`);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  }\n\n  function handleToggle() {\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12} align=\"center\">\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            aria-owns={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n        <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper id=\"menu-list-grow\">\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList>\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        disabled={index === 2}\n                        selected={index === selectedIndex}\n                        onClick={event => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}