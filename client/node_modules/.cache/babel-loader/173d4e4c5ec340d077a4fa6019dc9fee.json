{"ast":null,"code":"//------------------------------------------------------------------------------------------------------------------\n// urls\n//------------------------------------------------------------------------------------------------------------------\nvar baseURL = 'http://localhost:3000';\nvar signinURL = baseURL + '/signin'; //------------------------------------------------------------------------------------------------------------------\n// sign in post request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function signin(username, password) {\n  return fetch(signinURL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(function (resp) {\n    return resp.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// validate get request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function validate() {\n  return fetch('http://localhost:3000/validate', {\n    headers: {\n      'Authorisation': localStorage.token\n    }\n  }).then(function (resp) {\n    return resp.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// inventory get request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function getInventory() {\n  return fetch('http://localhost:3000/inventory', {\n    headers: {\n      'Authorisation': localStorage.token\n    }\n  }).then(function (r) {\n    return r.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// create user\n//------------------------------------------------------------------------------------------------------------------\n\nexport function createUser(username, password) {\n  return fetch('http://localhost:3000/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(function (resp) {\n    return resp.json();\n  }); //\n} //------------------------------------------------------------------------------------------------------------------\n// Transactions get request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function getTransactions() {\n  return fetch('http://localhost:3000/transactions', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (r) {\n    return r.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// Saving pots get request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function getUsers(id) {\n  return fetch(\"http://localhost:3000/users/\".concat(id), {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (r) {\n    return r.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// Stocks all get request \n//------------------------------------------------------------------------------------------------------------------\n\nexport function getAllStocks() {\n  return fetch('http://localhost:3000/allstocks', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (r) {\n    return r.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// create transcation \n//------------------------------------------------------------------------------------------------------------------\n\nexport function createTransaction(company, amount, date, category, id) {\n  return fetch(\"http://localhost:3000/transactions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      company: company,\n      amount: amount,\n      date: date,\n      category: category,\n      user_id: id\n    })\n  }).then(function (resp) {\n    return resp.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// create pot\n//------------------------------------------------------------------------------------------------------------------\n\nexport function createPot(name, description, goal, date, id) {\n  return fetch(\"http://localhost:3000/savingpots\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      description: description,\n      goal: goal,\n      date: date,\n      user_id: id\n    })\n  }).then(function (resp) {\n    return resp.json();\n  }); //\n} //------------------------------------------------------------------------------------------------------------------\n// delete pot\n//------------------------------------------------------------------------------------------------------------------\n\nexport function deleteSavingPot(id) {\n  var commentURL = \"http://localhost:3000/savingpots/\".concat(id);\n  return fetch(commentURL, {\n    method: 'DELETE'\n  }).then(function (resp) {\n    return resp.json();\n  });\n} //------------------------------------------------------------------------------------------------------------------\n// EXPORT\n//------------------------------------------------------------------------------------------------------------------\n\nexport default {\n  signin: signin,\n  validate: validate,\n  getInventory: getInventory,\n  getTransactions: getTransactions,\n  getUsers: getUsers,\n  getAllStocks: getAllStocks,\n  createTransaction: createTransaction,\n  deleteSavingPot: deleteSavingPot // we will be able to import validate by name or we can impoet the who api.js - this just gives us more options\n\n};","map":{"version":3,"sources":["/Users/ellekennedyvalentine/Dev/mod5 /week_1/react-project-DBO/client/src/services/api.js"],"names":["baseURL","signinURL","signin","username","password","fetch","method","headers","body","JSON","stringify","then","resp","json","validate","localStorage","token","getInventory","r","createUser","getTransactions","getUsers","id","getAllStocks","createTransaction","company","amount","date","category","user_id","createPot","name","description","goal","deleteSavingPot","commentURL"],"mappings":"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","sourcesContent":[" \n//------------------------------------------------------------------------------------------------------------------\n// urls\n//------------------------------------------------------------------------------------------------------------------\n\nconst baseURL = 'http://localhost:3000'\nconst signinURL = baseURL + '/signin'\n\n//------------------------------------------------------------------------------------------------------------------\n// sign in post request \n//------------------------------------------------------------------------------------------------------------------\n \n export function signin (username, password) {\n     return fetch(signinURL, {\n         method: 'POST',\n         headers: {'content-type': 'application/json'},\n         body: JSON.stringify({username, password})\n    }).then(resp => resp.json())\n }\n\n\n //------------------------------------------------------------------------------------------------------------------\n// validate get request \n//------------------------------------------------------------------------------------------------------------------\n \n export function validate () {\n    return fetch('http://localhost:3000/validate', {\n         headers: { 'Authorisation': localStorage.token}\n     }).then( resp => resp.json())\n }\n\n//------------------------------------------------------------------------------------------------------------------\n// inventory get request \n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function getInventory(){ \n\n    return fetch('http://localhost:3000/inventory', {\n         headers: {'Authorisation': localStorage.token}\n        }).then(r => r.json())\n\n}\n\n//------------------------------------------------------------------------------------------------------------------\n// create user\n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function createUser(username, password){ \n    \n\n     return fetch('http://localhost:3000/signup', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    }).then(resp => resp.json()) //\n\n}\n\n//------------------------------------------------------------------------------------------------------------------\n// Transactions get request \n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function getTransactions(){ \n\n    return fetch('http://localhost:3000/transactions', {\n         headers: {\n            'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n\n}\n\n//------------------------------------------------------------------------------------------------------------------\n// Saving pots get request \n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function getUsers(id){ \n\n    return fetch(`http://localhost:3000/users/${id}`, {\n         headers: {\n            'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n\n}\n\n//------------------------------------------------------------------------------------------------------------------\n// Stocks all get request \n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function getAllStocks(){ \n\n    return fetch('http://localhost:3000/allstocks', {\n         headers: {\n            'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n\n}\n\n//------------------------------------------------------------------------------------------------------------------\n// create transcation \n//------------------------------------------------------------------------------------------------------------------\n \n\nexport function createTransaction(company, amount, date, category, id) {\n    return fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        company: company,\n        amount: amount,\n        date: date,\n        category: category,\n        user_id: id\n      })\n    }).then(resp => resp.json())\n  \n  }\n\n  //------------------------------------------------------------------------------------------------------------------\n// create pot\n//------------------------------------------------------------------------------------------------------------------\n\nexport function createPot(name, description, goal, date, id) {\n\n    return fetch(\"http://localhost:3000/savingpots\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        goal: goal,\n        date: date,\n        user_id: id\n      })\n    }).then(resp => resp.json()); //\n  }\n\n\n//------------------------------------------------------------------------------------------------------------------\n// delete pot\n//------------------------------------------------------------------------------------------------------------------\n\n\n    export function deleteSavingPot(id) {\n\n    const commentURL = `http://localhost:3000/savingpots/${id}`\n\n    return fetch(commentURL, {\n        method: 'DELETE'\n    }).then(resp => resp.json())\n}\n\n\n\n\n//------------------------------------------------------------------------------------------------------------------\n// EXPORT\n//------------------------------------------------------------------------------------------------------------------\n\n export default {signin, validate, getInventory, getTransactions, getUsers, getAllStocks, createTransaction, deleteSavingPot} \n\n // we will be able to import validate by name or we can impoet the who api.js - this just gives us more options"]},"metadata":{},"sourceType":"module"}